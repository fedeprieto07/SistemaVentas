<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Sistema" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="Acceso al sistema" xml:space="preserve">
    <value>Access to the system</value>
  </data>
  <data name="Ingresar" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="Usuario:" xml:space="preserve">
    <value>User:</value>
  </data>
  <data name="Contrasena:" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="Salir" xml:space="preserve">
    <value>Go out</value>
  </data>
  <data name="Almacen" xml:space="preserve">
    <value>Warehouse</value>
  </data>
  <data name="Articulos" xml:space="preserve">
    <value>Articles</value>
  </data>
  <data name="Categorias" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Presentaciones" xml:space="preserve">
    <value>Presentations</value>
  </data>
  <data name="Ventas por Fechas" xml:space="preserve">
    <value>Sales by Dates</value>
  </data>
  <data name="Compras por Fechas" xml:space="preserve">
    <value>Shopping By Dates</value>
  </data>
  <data name="Stock de Articulos" xml:space="preserve">
    <value>Stock of Items</value>
  </data>
  <data name="Compras" xml:space="preserve">
    <value>Purchases</value>
  </data>
  <data name="Ingresos" xml:space="preserve">
    <value>Income</value>
  </data>
  <data name="Proveedores" xml:space="preserve">
    <value>Suppliers</value>
  </data>
  <data name="Ventas" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="Clientes" xml:space="preserve">
    <value>customers</value>
  </data>
  <data name="Mantenimiento" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="Trabajadores" xml:space="preserve">
    <value>Workers</value>
  </data>
  <data name="Herramientas" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="Base de datos" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="Ayuda" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Indice" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="Acerca de" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Nombre:" xml:space="preserve">
    <value>First name:</value>
  </data>
  <data name="Eliminar" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Buscar" xml:space="preserve">
    <value>Search for</value>
  </data>
  <data name="Listado" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="Codigo:" xml:space="preserve">
    <value>Code:</value>
  </data>
  <data name="Codigo Ventas:" xml:space="preserve">
    <value>Sales Code:</value>
  </data>
  <data name="Descripcion:" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="Categoria:" xml:space="preserve">
    <value>Category:</value>
  </data>
  <data name="Presentacion:" xml:space="preserve">
    <value>Presentation:</value>
  </data>
  <data name="Nuevo" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Guardar" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="Editar" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Cancelar" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Sexo:" xml:space="preserve">
    <value>Sex:</value>
  </data>
  <data name="Tipo Documento:" xml:space="preserve">
    <value>Document Type:</value>
  </data>
  <data name="Direccion:" xml:space="preserve">
    <value>Address:</value>
  </data>
  <data name="Telefono:" xml:space="preserve">
    <value>Telephone:</value>
  </data>
  <data name="Apellidos:" xml:space="preserve">
    <value>Surnames:</value>
  </data>
  <data name="Fecha Nacimiento:" xml:space="preserve">
    <value>Birth date:</value>
  </data>
  <data name="Ingresos Almacen" xml:space="preserve">
    <value>Revenue Warehouse</value>
  </data>
  <data name="Comprobante:" xml:space="preserve">
    <value>Voucher:</value>
  </data>
  <data name="Articulo:" xml:space="preserve">
    <value>Article:</value>
  </data>
  <data name="Stock Inicial:" xml:space="preserve">
    <value>Initial stock:</value>
  </data>
  <data name="B" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="Proveedor:" xml:space="preserve">
    <value>Provider:</value>
  </data>
  <data name="Numero:" xml:space="preserve">
    <value>Number:</value>
  </data>
  <data name="Precio Compra:" xml:space="preserve">
    <value>Purchase Price:</value>
  </data>
  <data name="Precio Venta:" xml:space="preserve">
    <value>Sale price:</value>
  </data>
  <data name="Fecha:" xml:space="preserve">
    <value>Date:</value>
  </data>
  <data name="IVA:" xml:space="preserve">
    <value>IVA:</value>
  </data>
  <data name="Fecha Prod:" xml:space="preserve">
    <value>Prod Date:</value>
  </data>
  <data name="Fecha Venc:" xml:space="preserve">
    <value>Venc Date:</value>
  </data>
  <data name="Total Pagado" xml:space="preserve">
    <value>Total Paid</value>
  </data>
  <data name="Razon Social:" xml:space="preserve">
    <value>Business name:</value>
  </data>
  <data name="Sector Comercial:" xml:space="preserve">
    <value>Commercial section:</value>
  </data>
  <data name="DNI:" xml:space="preserve">
    <value>DNI:</value>
  </data>
  <data name="Acceso:" xml:space="preserve">
    <value>Access:</value>
  </data>
  <data name="Fecha Inicio:" xml:space="preserve">
    <value>Start date:</value>
  </data>
  <data name="Fecha Fin:" xml:space="preserve">
    <value>End date:</value>
  </data>
  <data name="Comprobante" xml:space="preserve">
    <value>Voucher</value>
  </data>
  <data name="Cantidad:" xml:space="preserve">
    <value>Quantity:</value>
  </data>
  <data name="Consultas" xml:space="preserve">
    <value>Queries</value>
  </data>
  <data name="Total de Registros" xml:space="preserve">
    <value>Total Entrys</value>
  </data>
  <data name="Agregar Lenguaje" xml:space="preserve">
    <value>Add new language</value>
  </data>
  <data name="Accesos" xml:space="preserve">
    <value>Access</value>
  </data>
  <data name="Agregar" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Administrar Accesos" xml:space="preserve">
    <value>Access Admin</value>
  </data>
  <data name="Agregar Politica" xml:space="preserve">
    <value>Add Policy</value>
  </data>
  <data name="Eliminar Politica" xml:space="preserve">
    <value>Delete Policy</value>
  </data>
  <data name="Detalle" xml:space="preserve">
    <value>Detail</value>
  </data>
</root>